import { Telegraf } from 'telegraf';
import { prisma } from '../../services/prisma.js';

export const registerHelp = (bot: Telegraf) => {
  bot.command('help', async (ctx) => {
    const role = ctx.from
      ? (await prisma.user.findUnique({ where: { tgId: String(ctx.from.id) } }))?.role
      : undefined;

    const common = [
      '‚öôÔ∏è –û–±—â–∏–µ:',
      '/start ‚Äî –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –∏ –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
      '/help ‚Äî —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞',
      '/cancel ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π —à–∞–≥/–º–∞—Å—Ç–µ—Ä',
      '',
    ].join('\n');

    if (role === 'PERFORMER') {
      await ctx.reply(
        [
          common,
          'üéÆ –î–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü:',
          '/listing ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç–æ–π',
          '/requests ‚Äî –≤—Ö–æ–¥—è—â–∏–µ/—Ç–µ–∫—É—â–∏–µ –∑–∞—è–≤–∫–∏',
        ].join('\n'),
      );
    } else {
      await ctx.reply(
        [
          common,
          'üßë‚Äçüíª –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤:',
          '/search <–∏–≥—Ä–∞> ‚Äî –Ω–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü—É',
          '/requests ‚Äî –º–æ–∏ –∑–∞—è–≤–∫–∏ (—á–∞—Ç –∏ –æ–ø–ª–∞—Ç–∞)',
        ].join('\n'),
      );
    }
  });
};
